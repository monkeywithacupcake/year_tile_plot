source("~/r_projects/yeartileplot/R/geom_rtile.R")
sample.int(n= 10)
sample.int(n= 100)
sample.int(n= 100,size = 10)
?expand_grid
??expand_grid
?seq.Date
seq(as.Date("2024-01-01"), as.Date("2024-12-31"), by = "1 day")
fake_2024 <- data.frame(
date = seq(as.Date("2024-01-01"), as.Date("2024-12-31"), by = "1 day"),
n = sample(n = 10, size = 366)
)
fake_2024 <- data.frame(
date = seq(as.Date("2024-01-01"), as.Date("2024-12-31"), by = "1 day"),
n = sample.int(n = 10, size = 366)
)
sample.int(n = 10, size = 36, replace = TRUE)
fake_2024 <- data.frame(
date = seq(as.Date("2024-01-01"), as.Date("2024-12-31"), by = "1 day"),
n = sample.int(n = 0:10, size = 366, replace = TRUE)
)
0:10
fake_2024 <- data.frame(
date = seq(as.Date("2024-01-01"), as.Date("2024-12-31"), by = "1 day"),
n = sample(x = 0:10, size = 366, replace = TRUE)
)
make_year_df(fake_2024)
make_year_df <- function(year = 2024, day_df){
# day_df has to have cols date and n
stopifnot("must have date and n as colnames" = c("date","n") %in% names(day_df))
yr_df <- expand_grid(
date = seq(as.Date(paste0(year,"-01-01")),
as.Date(paste0(year,"-12-31")),
by = "1 day")
)
yr_df |>
dplyr::left_join(dplyr::select(day_df, date, n)) |>
dplyr::mutate(
n_week = week(date),
n_day = lubridate::wday(date, week_start = 7),
weekday_label = lubridate::wday(date, week_start = 7,
label = TRUE, abbr = TRUE),
weekday_label = forcats::fct_rev(weekday_label),
month = month(date, label = TRUE, abbr = TRUE),
is_weekday = if_else(n_day == 7 | n_day == 1, 0L, 1L)
) |>
mutate(
n = if_else(n == 0, NA, n),
n_week = if_else(n_day == 1, n_week + 1, n_week)
)
}
make_year_df(fake_2024)
make_year_df(year = 2024, day_df = fake_2024)
fake <- data.frame(
date = seq(as.Date("2023-01-01"), as.Date("2023-12-31"), by = "1 day"),
n = sample(x = 0:10, size = 365, replace = TRUE)
)
make_year_df(year = 2023, day_df = fake)
make_year_df <- function(year = 2024, day_df){
# day_df has to have cols date and n
stopifnot("must have date and n as colnames" = c("date","n") %in% names(day_df))
yr_df <- data.frame(
date = seq(as.Date(paste0(year,"-01-01")),
as.Date(paste0(year,"-12-31")),
by = "1 day")
)
yr_df |>
dplyr::left_join(dplyr::select(day_df, date, n)) |>
dplyr::mutate(
n_week = week(date),
n_day = lubridate::wday(date, week_start = 7),
weekday_label = lubridate::wday(date, week_start = 7,
label = TRUE, abbr = TRUE),
weekday_label = forcats::fct_rev(weekday_label),
month = month(date, label = TRUE, abbr = TRUE),
is_weekday = if_else(n_day == 7 | n_day == 1, 0L, 1L)
) |>
dplyr::mutate(
n = if_else(n == 0, NA, n),
n_week = if_else(n_day == 1, n_week + 1, n_week)
)
}
make_year_df(year = 2023, day_df = fake)
make_year_df <- function(year = 2024, day_df){
# day_df has to have cols date and n
stopifnot("must have date and n as colnames" = c("date","n") %in% names(day_df))
yr_df <- data.frame(
date = seq(as.Date(paste0(year,"-01-01")),
as.Date(paste0(year,"-12-31")),
by = "1 day")
)
yr_df |>
dplyr::left_join(dplyr::select(day_df, date, n)) |>
dplyr::mutate(
n_week = lubridate::week(date),
n_day = lubridate::wday(date, week_start = 7),
weekday_label = lubridate::wday(date, week_start = 7,
label = TRUE, abbr = TRUE),
weekday_label = forcats::fct_rev(weekday_label),
month = month(date, label = TRUE, abbr = TRUE),
is_weekday = if_else(n_day == 7 | n_day == 1, 0L, 1L)
) |>
dplyr::mutate(
n = if_else(n == 0, NA, n),
n_week = if_else(n_day == 1, n_week + 1, n_week)
)
}
make_year_df(year = 2023, day_df = fake)
make_year_df <- function(year = 2024, day_df){
# day_df has to have cols date and n
stopifnot("must have date and n as colnames" = c("date","n") %in% names(day_df))
yr_df <- data.frame(
date = seq(as.Date(paste0(year,"-01-01")),
as.Date(paste0(year,"-12-31")),
by = "1 day")
)
yr_df |>
dplyr::left_join(dplyr::select(day_df, date, n)) |>
dplyr::mutate(
n_week = lubridate::week(date),
n_day = lubridate::wday(date, week_start = 7),
weekday_label = lubridate::wday(date, week_start = 7,
label = TRUE, abbr = TRUE),
weekday_label = forcats::fct_rev(weekday_label),
month = lubridate::month(date, label = TRUE, abbr = TRUE),
is_weekday = if_else(n_day == 7 | n_day == 1, 0L, 1L)
) |>
dplyr::mutate(
n = if_else(n == 0, NA, n),
n_week = if_else(n_day == 1, n_week + 1, n_week)
)
}
make_year_df(year = 2023, day_df = fake)
make_year_df <- function(year = 2024, day_df){
# day_df has to have cols date and n
stopifnot("must have date and n as colnames" = c("date","n") %in% names(day_df))
yr_df <- data.frame(
date = seq(as.Date(paste0(year,"-01-01")),
as.Date(paste0(year,"-12-31")),
by = "1 day")
)
yr_df |>
dplyr::left_join(dplyr::select(day_df, date, n)) |>
dplyr::mutate(
n_week = lubridate::week(date),
n_day = lubridate::wday(date, week_start = 7),
weekday_label = lubridate::wday(date, week_start = 7,
label = TRUE, abbr = TRUE),
weekday_label = forcats::fct_rev(weekday_label),
month = lubridate::month(date, label = TRUE, abbr = TRUE),
is_weekday = if_else(n_day == 7 | n_day == 1, 0L, 1L)
) |>
dplyr::mutate(
n = ifelse(n == 0, NA, n),
n_week = ifelse(n_day == 1, n_week + 1, n_week)
)
}
make_year_df(year = 2023, day_df = fake)
make_year_df <- function(year = 2024, day_df){
# day_df has to have cols date and n
stopifnot("must have date and n as colnames" = c("date","n") %in% names(day_df))
yr_df <- data.frame(
date = seq(as.Date(paste0(year,"-01-01")),
as.Date(paste0(year,"-12-31")),
by = "1 day")
)
yr_df |>
dplyr::left_join(dplyr::select(day_df, date, n)) |>
dplyr::mutate(
n_week = lubridate::week(date),
n_day = lubridate::wday(date, week_start = 7),
weekday_label = lubridate::wday(date, week_start = 7,
label = TRUE, abbr = TRUE),
weekday_label = forcats::fct_rev(weekday_label),
month = lubridate::month(date, label = TRUE, abbr = TRUE),
is_weekday = ifelse(n_day == 7 | n_day == 1, 0L, 1L)
) |>
dplyr::mutate(
n = ifelse(n == 0, NA, n),
n_week = ifelse(n_day == 1, n_week + 1, n_week)
)
}
make_year_df(year = 2023, day_df = fake)
make_like_gh_graph(contributions = make_year_df(year = 2023, day_df = fake), fill_palette = "PuBu")
source("~/r_projects/yeartileplot/R/year_tile_plot.R")
make_like_gh_graph(contributions = make_year_df(year = 2023, day_df = fake), fill_palette = "PuBu")
source("~/r_projects/yeartileplot/R/year_tile_plot.R")
make_like_gh_graph(contributions = make_year_df(year = 2023, day_df = fake), fill_palette = "PuBu")
source("~/r_projects/yeartileplot/R/year_tile_plot.R")
make_like_gh_graph(contributions = make_year_df(year = 2023, day_df = fake), fill_palette = "PuBu")
source("~/r_projects/yeartileplot/R/geom_rtile.R")
make_like_gh_graph(contributions = make_year_df(year = 2023, day_df = fake), fill_palette = "PuBu")
source("~/r_projects/yeartileplot/R/year_tile_plot.R")
make_like_gh_graph(contributions = make_year_df(year = 2023, day_df = fake), fill_palette = "PuBu")
source("~/r_projects/yeartileplot/R/year_tile_plot.R")
make_like_gh_graph(contributions = make_year_df(year = 2023, day_df = fake), fill_palette = "PuBu")
source("~/r_projects/yeartileplot/R/year_tile_plot.R")
make_like_gh_graph(contributions = make_year_df(year = 2023, day_df = fake), fill_palette = "PuBu")
?png
?dev.off
source("~/r_projects/yeartileplot/R/year_tile_plot.R")
make_and_export_year_tile_png(fake)
source("~/r_projects/yeartileplot/R/year_tile_plot.R")
make_and_export_year_tile_png(fake)
fake
make_and_export_year_tile_png(df = make_year_df(year = 2023, fake))
devtools::document()
?grid::unit
source("~/r_projects/yeartileplot/R/geom_rtile.R")
make_and_export_year_tile_png(df = make_year_df(year = 2023, fake))
source("~/r_projects/yeartileplot/R/year_tile_plot.R")
make_and_export_year_tile_png(df = make_year_df(year = 2023, fake))
source("~/r_projects/yeartileplot/R/geom_rtile.R")
make_and_export_year_tile_png(fill_palette = "Purples",df = make_year_df(year = 2023, fake))
source("~/r_projects/yeartileplot/R/geom_rtile.R")
source("~/r_projects/yeartileplot/R/year_tile_plot.R")
make_and_export_year_tile_png(fill_palette = "Purples",df = make_year_df(year = 2023, fake))
source("~/r_projects/yeartileplot/R/geom_rtile.R")
make_and_export_year_tile_png(fill_palette = "Purples",df = make_year_df(year = 2023, fake))
source("~/r_projects/yeartileplot/R/geom_rtile.R")
make_and_export_year_tile_png(fill_palette = "Purples",df = make_year_df(year = 2023, fake))
source("~/r_projects/yeartileplot/R/year_tile_plot.R")
make_and_export_year_tile_png(fill_palette = "Purples",df = make_year_df(year = 2023, fake))
source("~/r_projects/yeartileplot/R/geom_rtile.R")
make_and_export_year_tile_png(fill_palette = "Purples",df = make_year_df(year = 2023, fake))
devtools::document()
usethis::use_readme_rmd()
usethis::use_readme_md()
